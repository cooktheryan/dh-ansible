apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: go-web-template
  title: Go Service with ArgoCD and a Tekton Pipeline
  description: Create a Go app with ArgoCD and a Tekton Pipeline
  tags:
    - recommended
    - go
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-go-app
          ui:field: EntityNamePicker
          maxLength: 14
        group_id:
          title: Group Id
          type: string
          default: redhat.janus
          description: RH DH Group ID
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A cool go app
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-qc7tb.apps.cluster-qc7tb.sandbox2129.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
      - title: Provide information about the new component
        required:
          - githubOrg
          - repoName
          - owner
          - system
          - port
        properties:
          githubOrg:
            title: GitHub Organization
            type: string
          repoName:
            title: Repository Name
            type: string
          description:
            title: Description
            type: string
            description: Help others understand what this component is for
          owner:
            title: Owner
            type: string
            ui:field: EntityPicker
            ui:options:
              catalogFilter:
                kind:
                  - Group
                  - User
          system:
            title: System
            type: string
            ui:field: EntityPicker
            ui:options:
              catalogFilter:
                kind:
                  - System

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.cluster-qc7tb.sandbox2129.opentlc.com
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080

    - id: ciTemplate
      name: Generating the CI Component
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/tekton-skeleton/
        copyWithoutTemplating:
          - .github/workflows/
        values:
          githubOrg: ${{ parameters.githubOrg }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageUrl: ${{ parameters.imageUrl }}
          imageBuilder: s2i-go
          imageRepository: ${{ parameters.imageRepository }}
          port: 8080
          ci: ../../scaffolder-skeletons/tekton-skeleton/tekton

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.cluster-qc7tb.sandbox2129.opentlc.com
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: quarkus-template
          user: ${{ user.entity.metadata.name }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.githubOrg }}&repo=${{ parameters.repoName }}
        defaultBranch: main
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://github.com?owner=${{ parameters.githubOrg }}&repo=${{ parameters.repoName }}
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
